#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#define A(I) (*(A + I))

double polysum(int degree, double *A, double x)
{
	int i;
	double sum=0.0;
	for ( i=0;i<=degree; i++)
	{
		sum += A(i)*pow(x,i);	
	}
	return sum;
}


double simpson(
double (*f)(int,double *,double), // polinom fonk. cagýrmak icin
double a,  // baslangýc
double b, // son
int n, // aralýk sayýsý
double *A, // polinom fonk icin
int num // polion fonk icin
)
{

	double answer,h;
	double x;
	int i;
	
	answer = f(num,A,a);
	h = (b-a) / n ;
	
	for(i=1;i<=n;i++)
	{
		x = a + (i*h);
		answer = answer + 4*f(num,A,(x-(h/2))) + 2*f(num,A,x);
	}
	
	answer = answer - f(num,A,b);
	
	return(h*answer/6);
}

int main()
{
	int i,num;
	double v = 0.0;
	double start,end,interval,result;
	printf("Enter degree of the polynom: ");
	scanf("%d",&num);
	printf("\nEnter start,end,interval number: \n");
	scanf("%lf%lf%lf",&start,&end,&interval);
	
	double *A;
	A = (double*)malloc((num+1)*sizeof(double));
	
	for(i=num;i>=0;i--){
		printf("\nEnter the %d. coefficient of the polynom:",i);
		scanf	("%lf",&A(i));
	}
	
	printf ("Equation: \n");
	for(i=num;i>=0;i--){
		if(i!=0)
		printf(" (%.2lf)*x^%d + ",A(i),i);
		else if(i==0)
		printf(" %.2lf ",A(i));
	}
	
	polysum(num,A,v);
	result = simpson(polysum,start,end,interval,A,num);
	
	printf("\nResult is %lf",result);
	

	free(A);
		
}
